package oper

import (
	"encoding/base64"
	"fmt"
	"testing"
)

func Test_getChallengeKey(t *testing.T) {
	t.Parallel()
	key, err := decodeChallengeKey([]byte(testFile), testPasswd)
	if err != nil {
		fmt.Println(err)
	}

	testData, err := base64.StdEncoding.DecodeString(testEncrypted)
	if err != nil {
		panic(err)
	}

	res, err := key.Decrypt(nil, testData, nil)
	if err != nil {
		panic(err)
	}

	fmt.Println("result of decryption:", string(res))
}

const (
	testPasswd    = "test"
	testEncrypted = `9nVYlbNsGaRqo9S1Llx+PxDzTT20BvW7onzEF6HNNaPPtpXP6evcHnQRHZIo7lRY2qAxh7CqmNsN
MCugu/V70WTPOe0JuykSz0CmVKpKPuUGSs+XHpSEj8fTJ6+IC+/Q0qb6ug6TzEyPdtkqoD4uCBX8
45TWNxObqMJeL4LgOqdck5DQnHE3YkUTdfgGap6aOy8MH+PPDLV601SDUVB76faZxrA3b1WM0OkL
XDN1pYSPRDhFIfrhz74sHWDsTE79HwuO/G7nCCGwtohBjZJMiTCkVq++OVCy3Ot8EQZSGyEacxuY
9RN6Pp6EWhtaSKQYJ3hNKMaHSatUexSlpxVx1WMKgHrRokf9KZP63aObhWod33EqGWGvc4HJ5ims
jURa2WV6+ZiW0iOo9FZz72WCwo0BjcCAq4IXa8AaWFVE8JrXBp87sIMDl0pVVX1xmwp7+UmJoqMI
NsjH4u4UROZC+DSat5zEBBxRiiqlM+qLPHVDfKZ5GxVGBcK9QNa2UkCIPyru6lcHiRpK8uAQCkqp
bLxGZeg41BrthIhRYf2ep8YK981dFyzoczBZW6TDvKClXuWfZbXY2NMrz5UDSKaO8XcqatwFucuw
KgY4w1aXOUaISUr4oLcDlNNUnp004HVHzwJs+clhr3bj7ovYlqP/fw6Z89HY/7IQoGHIXn6OPHLz
wU2kNUi/nWezIm9HNGoj8pd1ROHApF5zU1+MwaYtsMScWXE4KYsnRcHGkfb2ETQEJZQIRcVCeB4e
Z3uBmdfE9L42X0Z3Htz4g0pBl5TY3a/p3+Ige3WRJue/78HVbWTJgvFGkmxpuGeaeAlKSVm8e0cj
pZE/Mwl8R0OI3CFKaE2gA2QNw8z68BzyK3uXSj9j5dLgkVghNmS6zBMQwBbvqz8tIvlerX01xV6S
+Xf/CLNIHZfuBwvQZ8bb+IOb6q+lTo9USBgN00NHi4r8e+2y6vF8ScqTKnrMkX8bytT/CnXqHoPT
9W25VR1fv18xM8iDMKEtcBP1dluRfiL+1n91ZxI98QnusPgGMtnP14smusb8OaqLvsoo9OQkfubE
LaYSV9YoLAFzaFCEk+KIs72sOvFHzGqbn/3LjXGz1HAA7LhpZLl4985L1cKmgJJnHSe+dBkVM7nO
WgLjUtuB6lzuLrB1J/WDJOQdULgKFZov5cji9vZqblOOFBakbRIQM1G0Wq0aU7o2qoZFtPUAz92j
vAmumPBZuijgac6AHwV3w/N2dut7eGD9wX5mkVRBthko2++fBVwi5G7ytTIs+eT9XrDD7H++CKB6
1Esd9013eBQt9Sb6WU6bRCwvxwjf7r3+Z0JYkCCucCWvzJbDm1GSZtYgtTn8f6UlbnKe4H1YQQ==`
	testFile = `-----BEGIN ENCRYPTED PRIVATE KEY-----
MIISrTBXBgkqhkiG9w0BBQ0wSjApBgkqhkiG9w0BBQwwHAQI8XqmoxQeS0kCAggA
MAwGCCqGSIb3DQIJBQAwHQYJYIZIAWUDBAEqBBB4dpQ4x6QYYLSeKP6AUtbYBIIS
UFxFDU9jnhX1ZXwhXMeW6s/PkkR/reVlVRxbB4bt53Md+JFdALLiYm6E0ODYewRJ
v7uCumrcXXlVsk6Krwes8TLAep+Ccg2xIKC8FmT8EIh4Hao3FE8c6T8OOKaqFCLg
iUirAto1H1YEScMvKaW5Vm9zql1h+57WAjKqJk24mFsOXfGHo+2P7DdDgmKGYvde
il+5Dbb4hDQb1qaXeRbXZ5KOv9vKkoQGTYl/LAHVp4N58ikOZ+bRuXiLModfCXEH
CnHB0jNSd/3fMEltAA4Am5JJXR7KwzCSWSP/TL3CgZD290a0GCJj5yO+HFqXXudp
qWcLhSAOfipPX2Viv3CtcwWT+xAdYbC6Jb3nG4IavDcpcaryQTlL62XMhTksojU2
p6HBdimFOsvke8tM4WUKavYl0DrivakTIeNQLYcQuG3nuabFdwVap/xT/29yFDy+
Q/A9CjZ91tCShtOvcRYA6PX7h8TgGyVdmtNbo2IOfGZDUiHkxevhC1WeJ1+Jw36U
P3WDbGYq+J13i5qhHUUkMxdp3jNQpLkySPT9PGkvQ/x06oYJCXLjkuG9m41LWqMe
FNa1WR5D7SE7zbtPbc14fyDB5q3ybO+js1iep5ZK3uwoUs05evXhZ7PNxXlckQIF
0d8XEl3TFsV+KskEHSq9C+jPdmxgldYcq42XridF3FFHn0MKsOYQTukVoePrSSXD
xT8yw8mqQPREThVEE5UiubEaXKznhqevdZ7qJ5t/2IT4BaGpEAxqf4tIGZ2AytRP
lSlKtk/UzKWCr1KpNpEJkPWIWbxOjOXDjC4AVw4ZZPLcOqAxePy+sGAGlw+cQDJq
wFA7AGyeX9AHW8CsRAFxkO4N8LR5E5AElhghP/FGFLUiJX9vtJXUz540v9KVLrVG
7DzSlv+6lYdOlq0QsNRn+LvHXHzzEf5oYUKj6C4FEIBjZvHR41bsnaYdEpqa7d8K
xs1MqnBG1msyevicS4MhGsFQmeoD+KTJpLDE4d1rqnX5oFV2pYMI5TvMTGcEMuF8
A6uO/b+EiOGQ9DGdA5Y51RAXve3mFs1Jhg/RRXm/0rDcDz0/whNYXMZ7hxLWWpLO
CCeXZd6eegk90sjJFSI0Ap7TAi6ZFCRR0BYSx1oZyVPsWrE3Aw9cwXl1J4fQLRtB
e5YTWdcfzuekfyZZ1eaNolGbFFFYG6gOjxyzfBKioBo5lbnLBpnwfgG5qidPWMox
9/OaXPgT8rbXmKu+djbphfiiDIkz0QuFBfwDWgwCDNr9ToJoui4tStDASYAHD8FJ
tpBON7CyhJGARVN0W60r0LGQB/2kbWyIjtYMWQPDOjXgRW+0godQk/TmGuhbUziK
aGGRHYr2IpkAWvlvVDUFhqT6yNOg2Agm3OUjv/86IWNa84lcChzsYAAasjv5Tokt
72qeMo99brNUMD89kHWH2rbXYSjxgZIX7AhK2DB9HybG8VOeNq7m1i2f97MXDseI
JEsJod4l/jb1sKyK1M7u3QxR03ddXnVelZ4hYHJTNnNMEjIosgqP07rmXXq3QvcV
R6GxRCuwHxWahc9z1SM9iX+hhZAPQJ5LiRj9NzgQqsXAE09kytxS82GdTU64zoYB
IWnAVThpBFn+3leM+Ws87u2pJWVoRiMHXaknbB+rfzLZSYPxbFXv9bUoqq9stoI2
ANtcxwTGBkw22qyEupa0AGQPAquQHDmGZ/0LhKg1plW1+Q+4+b5e3JIi/G63qpy8
CNoWcFrCWrSkijhrMxTtdi66Du9WyNigrjQq4hokj4KdC47piufT7Sra0MPS+qMC
3wPYuEa9dfw8u2lQteGNFUxNHLB8pAoVP1iRtJ2kXrCyhhqmo7zxhBbvL/GTYQvR
2LA76yOp7LjuFCZEQatfYIIw8n4gOZSZF3CrdTXSejMl/FHg+7DRFmwN0SLZ3bQn
DsmJ0fLtrmu6oGgVTQEEY723g+qQ4y/EtfBA0N4vzr/2YWVwZjWBlHfkEPVqdR1Z
ypAqt/iAPt8DBs6/zP7duN+PYHYNL2bTXlkY4TR4JfMjV5qrPkE/zdTIBE2/rIEN
HLNggYw6CkZoZgjeUFtJE50FPMq24W8eCe2nvBbYeD86YjFoFzLzjil2kNk8xTtg
9rXmmZcv/mBk6JQGtB8kJCHq0qYlU053NDtwYVRO5sGg0LwtlIFjcbh/79LmtnRS
Ik5G+0ScxAPfN0toZKA9ZvlZ8MzE7oJr3hml11Qg3F5bzUG2W/5eKIVat6qaq1oi
9tWfRMlyBTHzKxb4JShiTvH4v7tvedpiUTdlnpqZAtqsrkams3+ekfIi4J2aoT38
JhnaiC2icAP0ePl8R+dKCddEGPuzK0xVi5KtJKz7tSWRPqdc+igHy1DlmqbHZhqi
O2nsGOxdqWfNVskl5hye4WYxAX6ONA/lLIwH1IdSUP8BxVRbdSAmwbQL7LhEgy9D
W1oEpgTuXe7MAID0lriBIwcnP+8xXs9Chry/IHzA4u+EFasExcNZ1Xuktke6XNF1
YllBwdy94K/tfnQJ68XL9GsoXXBH8KL7CyjP1bu05kRWNi48+2/JG/XqhimZfX/U
KV5TZdDJ7PyLZpJmKvAyzKLQ/2o7JDB6f++d1Qguj/ET6IzSc0mGzQCZq4wC1aPd
olPwsObqVgdy6VghAUh6+12xiCylIVjXdEJm2wbHXbM+TxB9+rY9lWb9xGKvD3yP
NZUakYsFjaOB14BQCDU8EUYpal71O6X6Q8956y2250Gd74f7IRJR1TgsPompjClj
NX438zfAKxRiVWEEHZat/DQTFo8Kl9XWl5v1Q2iD63UMv/IMNUGxpGQN6Y+uzmsg
Gbzb9nzodW7w6ceIaRiWjF+pFWhtsaeFC78rAWGiObU4ibmfKT+bTvMkRVVkhJNe
zs4vHQaXUskBOSuh/qB/BfWAP9BDQgIPQhsEAvjPOuNsq+RpheWH2rlvY5Kg8Xb6
qAZtnSMmtgoAFDGejO7xLg0fK5nhU6H0LPV0Xf4QORVoq7lL5OBuIrP/PLrw3dxt
VE754qt7UXi7cOaohLpOPRqZ6ZAn5wqBP0oh5iKnAaw+U6kdILwQuwb464iQTtCK
1h/DDoNLMnTryCvCxEI4cIDbki4OAbQhqD8XX5aXwRHnUtTQIKpahBZQwv5AVFP8
deITnnTTGHO02z8jY3W81qsK4s47afF17FCli04k/l12FG0E2o7JSGh0b2kDW0Xh
jIz3CYcTU4AS3aHlXBdZuNVZ+jg3Etk+svDVz2vb6us9R2wr+bLxzR98T3DkCgJq
KrzuL3YFSi9zAaOldzcHI+l7TFvA2WfBuZmi2qQgSmlnwGx0W7SvEfRMW+NdZ/qF
D8rLPuAJbVA7Qld7ztQi3DSuoq8c8OSMjukg1Y/qIMP/kj/lzGC4HDtp3m3jzaPe
91UldHKSzcQgUKxRCY4le6x6knbLBgaE96k9F6xSINwobfc1n4498uVstUasf9ZT
G7wFXFDXbGIAL1OS2DIoChqTKjCJKS0gMna+ObPSMVB9ighI8OhA9vYYpFqpx0sT
iC/1zcKXdcwYSUz++yWTbxqCVIHvsgveFHJvmyeOwRsYlO1f9SdPLUo4IRN1OHF6
sMVG/yp7MZ+ExZ98aS3GODrE7nS2j5HlOvzrnmdTXGQQCQgAajGvl/0c9vi2LCSf
ABd3PeAJKNid5q3JHQubVPOok9fmpWLwGjwgSnHKaaF1y4zxPxXpwO1Z3cCvGD0V
AWpoUEbj6Nz7wOR8xdhhWloa4e4Kn0FEYAjrgMJ89yqYt5P9FxN/QbtkAHdzgzdn
24IQ0e33qOxALKdhCGs5j0b48Rcn/Zfd5YJ6dAI05eMaf3MldaegYy9jeGqwuKDy
nPtKnGEiWDGaC1RgpRriieigit3BKbvTtxwgpCtasio3bnbux7/3FXzTTqHNohwF
iokJGTgPSFNQZTJWJBPapTNKz9fCsTbLxsSwfFCtjIJa20ZiR18+vn65qy9YoEo/
QflN0MdDaKAhJSKGuXNEJasXRzW6PqeAFvCItjc5jYBTKhz4DZFvwiKZf+P+qLpu
FbGW3E8B6+ETpNHD5kEFLikpk4MrH46e5k/7nkxYmkXIiujkM9QDEg4Fb2LV8pW5
poh4aaxkxOJ8iP4wAXj4pUtA29tc5ecOFQWyl0kaVGpZu7JCW2BlaNCAPPzSlZ5X
ozbAkqd1JbMmV7qJLzUqM8dQpvstVyHrmMGyX8uD/olWOP8jHaOUfdehg9DZwtUP
D4cuYxdVNOOS1WzZarOQAwL44drAqgqPO/zEzgeVbrmzg1G+vs6ezB5Ztg3DPsO1
IoGZvSScjT/Yls4xHSzNIDtGPnin/mz11PGTMio0bHUtUlegvLFSbSw/3dGk2aP/
3oB3GYiNMm/S2eCGs9Ot8tAPnk5xIm/GKXhZkzhPZPMX9WrzKUmx+KAb6YzyNkwQ
3xJY80vSToUiaK5WjGRdU6CbYLBmsPVZGVOILVRBabbc5xgSG7xyTWVOKYeSk4Eh
ZenbqVThZfYvx0HFrUivbXqbUqXXHTx+B6prjpBt+l8xBrK2f0EwvklFQVrhK37/
7djtIjpMm4EfbJcTqHmM9CRnMoubyzufBGOraWq4BsaRIpvBJri0Jzaqh1c+UHB4
m2NX5MM0Y1mjY9sB6f9wdHGC0HNcv12UaY/RxNaKLcGQG/ORn7zcIPBUyxW2mhks
Ty1pluZVzY04gknAXxhBp5AqaSCr9QdEFdD0uOplNBaOO7dchsafTj6oaW4v7nxu
1XihLNjBhx29SHgVlVgmdGLYY1hXytH4nLPZRgCOWK/ccGVk+idNJ1h3NpzSkfeI
XNfzA6c1Ohs4h4W4GQX8dcJEHeryIEY19xvQ1GoWHOLvPPhKMurmGW3m7Q2F+/AP
fw/hEPLJ9DT2sztv0XDs5iAMI0wCsj8hoOGcxky3eOEMC2uZef791sbIAdJFrni4
TwLrPT4WuoYUYXw5OFfrSD+mpZ5Y2D4ZzsvKtagY5oRJVkMSbov2bXUUx294Otgm
3XWjPm65jOwJn+W2hcsR2rF6sndi5AhTXhB26MJJ9L1VVl8+TgfmB92xUFeIwzwO
TfjU457K7JXbO99nRKn9Q8W0XYaRZe+hs0xjjsOt/QEIHEHZ4oOQ6dYVz/kwsUDS
Plj7DNgQhXLybeGOthL3/T8hJIxMFq9tSyuzplnJzf4DorUSHbKdTq9qWnpCIWRG
zZDa+TGXUejnhBYg8nJyrzbjLZ5irUbFbU4QD1MR8a+gcEYt5433qUhtZze1/wx9
xOhfYkAG3L6x/No3BAOBSp+OfsWpjbMm1BeBqkbdv7x9pmANyRmKuhIYp1RoCkxw
0R+/iIU1+iv/oX5ekKQDwxPar7tgJX4TFi3Y9b7ojUqAi7U33x7UHU7tSh208dVv
tkiwDiKJ0r0SuMQtP124IKDSk4lLox5yfkMLt0Udo91OCiSLUAvH6u1NGhqk/pyB
FSzyxxpZDCExk9rmtQD8mWejM50I117w5EFvPs5B+VuptUvwZp+8yhhopVdyDBjC
w9m74pVNc52XHIUucVYJzy7QxebOOEgO5bWiXa+qNPSzr1jrxAhBIj0IsRxc/lTl
HPLTMtj9n5Jgs+Z+uVeBKjsa0yj7aqQRD0DtnGrpY6a3Bf3UfP3smoSIaYdNYVAO
uq4Bj8+WAFKZ6HPeK1hgVWX0134+WFkDa4wnTqUuwxoqKfxovOWRfiSAm3iPHu+F
CPIj5ET4xu4nE+5UkroeDpGrGrTUIyQ1zywLPTAGGxKjhRwllnXF2EbBjIAD0Xfp
rmXWOEzmsZLLiGmlJz9Nj3PRcyP4cnG9KaEsbljqCZke7W97SCS3RrngHQkRwxlY
n4g6vOaweiCOPLCjXd8vVLdHgJE3IS03ILKgtaQi9ve9W9bgQA20wnI2pluaXZDg
JkJOs0+QU5a7WUdIlG39UxzBgEbn+WqyeEczcQjj3WlGhmUDcDQUQcaBZuoI6tHN
b2M9ick6FIor5gddFDzzeUuBY+dTBq31m6nrealTJC5tU0Ur5CawdXFBNNknkdcb
o6ErkhN6sawt+uApUmW5u90L7qXG1ORUOc/llwMILtbQUyHlPgTO1nVn+1QbhwTY
7HOkcMGaW3A/GlnXgCzcC8wJCPXtTfbhQwJqtLhk10PhZJ64+dA+VhWBjCEdPYxj
VTupUucqgPWqqIpS+/KSm6g+xoH0Cewhx0OeVIPgW/SkRxijywt5ce7hJuxXmall
ksZNuJTJA5qEfAWQJpii7JjN2nBuqqIT7MwF1qmnUjo+
-----END ENCRYPTED PRIVATE KEY-----`
)
